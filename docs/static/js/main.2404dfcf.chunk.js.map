{"version":3,"sources":["components/AddCategories.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategories","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","propsTypes","PropTypes","func","isRequired","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"oNAKaA,EAAgB,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAoB9C,OACI,sBAAMC,SAZW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,GAE1BR,GAAe,SAACS,GAAD,OAASP,GAAT,mBAAwBO,QAO3C,SACI,uBACIC,KAAK,OACLC,MAAOT,EACPU,SApBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,aAwB/BZ,EAAce,WAAa,CACvBd,cAAee,IAAUC,KAAKC,Y,mCCpCrBC,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAWH,GAF/C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAaZM,GAbY,4CAAH,sDCEPO,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAGjC,OACI,sBAAKc,UAAW,yCAAhB,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCHHO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECDb,SAACA,GAAc,IAAD,EAEZlB,mBAAS,CAC/ByB,KAAM,GACNa,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAqBtC,OAdAC,qBAAU,WAENxB,EAAQC,GACHwB,MAAK,SAAAC,GAEFH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAKtB,CAACpB,IAEGqB,EDjBwBK,CAAa1B,GAAhCa,EAHyB,EAG9BN,KAAaa,EAHiB,EAGjBA,QAYpB,OACI,qCACI,qBAAIJ,UAAW,oCAAf,cAAuDhB,KAErDoB,GAAW,mBAAGJ,UAAW,mCAAd,wBAIb,qBAAKA,UAAU,YAAf,SAGQH,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAEQA,GADCA,EAAIC,aE3BxBgB,EAAe,WAAM,MAIM7C,mBAAS,CAAC,cAJhB,mBAIvB8C,EAJuB,KAIX/C,EAJW,KAW9B,OACI,qCACI,8CACA,cAAC,EAAD,CAAeA,cAAeA,IAC9B,uBAEA,6BAEQ+C,EAAWnB,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAEAA,SAAUA,GADLA,Y,MCnB7B6B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.2404dfcf.chunk.js","sourcesContent":["\n\nimport React, { useState } from 'react'\nimport PropTypes from 'prop-types';\n\nexport const AddCategories = ({setCategories}) => {\n    \n    const [inputValue, setInputValue] = useState('')\n    \n    // Último valor actualizado que la persona escribió\n    const handleInputChange = (e)=>{\n        setInputValue(e.target.value);\n    }\n\n    const handleSubmit = (e)=>{\n        e.preventDefault();\n\n        if(inputValue.trim().length > 2){\n            \n            setCategories(((cats)=>[inputValue, ...cats ]))\n            \n        }\n\n    }\n\n    return (\n        <form onSubmit = {handleSubmit}>\n            <input \n                type=\"text\"\n                value={inputValue}\n                onChange= {handleInputChange}\n            />\n        </form>\n    )\n}\nAddCategories.propsTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n\n\n\n","export const getGifs = async (category) => {\n\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI (category) }&limit=10&api_key=980IBnHn9uxSPYwzHlDy9X5GXLsbaV7v`\n    const resp = await fetch(url);\n    const { data } = await resp.json();\n\n    const gifs = data.map(img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    })\n    return gifs;\n\n\n}","import React from 'react'\n\nexport const GifGridItem = ({ title, url }) => {\n\n    \n    return (\n        <div className= \"card animate__animated animate__fadeIn\">\n            <img src={url} alt={title} />\n            <p>{title}</p>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs'\n\n import { GifGridItem } from './GifGridItem'\n\nexport const GifGrid = ({ category }) => {\n\n   \n    const {data:images, loading} = useFetchGifs(category);\n    \n   \n\n    // useEffect(() => {\n    //     getGifs(category)\n    //     .then(  setImages)\n    // }, [category])\n\n    \n    //getGifs()\n\n    return (\n        <>\n            <h3 className= \"animate__animated animate__fadeIn\"  > {category}</h3>\n\n            { loading && <p className= \"animate__animated animate__flash\"  >Loading...</p>}\n\n            \n\n            <div className=\"card-grid\">\n\n                {\n                    images.map(img => (\n                        <GifGridItem\n                            key={img.id}\n                            {...img} />\n                    ))\n                }\n\n            </div>\n        </>\n\n    )\n}\n","import { useEffect, useState } from 'react';\nimport { getGifs } from \"../helpers/getGifs\";\n\n\nexport const useFetchGifs = (category) => {\n\n    const [state, setState] = useState({\n        data: [],\n        loading: true,\n    });\n\n    useEffect(() => {\n\n        getGifs(category)\n            .then(imgs => {\n\n                setState({\n                    data: imgs,\n                    loading: false\n                });             \n\n            })\n\n    }, [category])\n\n    return state; // {data:[], loading:true};\n}","import React, { useState } from 'react';\nimport { AddCategories } from './components/AddCategories';\nimport { GifGrid } from './components/GifGrid';\n\n\n\nexport const GifExpertApp = () => {\n\n    // const categories = ['One Punch', 'Samurai X', 'Dragon Ball'];\n\n    const [categories, setCategories] = useState(['One Punch']);\n    \n    // const handelAdd = ()=> {\n    //     setCategories([...categories, 'HunterXHunter']);\n    // setCategories((cats)=>[...cats, 'HunterXHunter]);\n    // }\n\n    return (\n        <>\n            <h2>GifExpertApp</h2>\n            <AddCategories setCategories={setCategories} />\n            <hr />\n            \n            <ol>\n                {\n                    categories.map(category => (\n                        <GifGrid \n                        key={category}\n                        category={category} />\n                    ))\n                }\n            </ol>\n        </>\n    )\n}\n\n\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\n\n\nReactDOM.render(\n  <GifExpertApp/>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}